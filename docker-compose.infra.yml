version: '3.8'

services:
  # =================================
  # KAFKA ECOSYSTEM
  # =================================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: ratp-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
    networks:
      - ratp-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: ratp-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - ratp-network
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: ratp-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: ratp-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    networks:
      - ratp-network
    restart: unless-stopped


  # DATA LAKE STORAGE
  minio:
    image: minio/minio:RELEASE.2024-06-29T01-20-47Z
    container_name: ratp-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - ratp-network
    restart: unless-stopped

  # Setup initial des buckets
  minio-setup:
    image: minio/mc:RELEASE.2024-06-29T09-06-00Z
    container_name: ratp-minio-setup
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb myminio/ratp-raw --ignore-existing;
      /usr/bin/mc mb myminio/ratp-curated --ignore-existing;
      /usr/bin/mc mb myminio/ratp-gold --ignore-existing;
      echo 'Data Lake buckets created successfully';
      "
    networks:
      - ratp-network


  # SPARK CLUSTER
  spark-master:
    image: bitnami/spark:3.5.1
    container_name: ratp-spark-master
    ports:
      - "8082:8080"  # Spark Master Web UI
      - "7077:7077"  # Spark Master Port
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./spark-apps:/opt/spark-apps
      - ./data:/opt/spark-data
    networks:
      - ratp-network
    restart: unless-stopped

  spark-worker:
    image: bitnami/spark:3.5.1
    container_name: ratp-spark-worker
    ports:
      - "8083:8081"  # Spark Worker Web UI
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./spark-apps:/opt/spark-apps
      - ./data:/opt/spark-data
    networks:
      - ratp-network
    depends_on:
      - spark-master
    restart: unless-stopped


# VOLUMES PERSISTANTS
volumes:
  zookeeper-data:
    driver: local
  kafka-data:
    driver: local
  minio-data:
    driver: local


# NETWORK
networks:
  ratp-network:
    driver: bridge
    name: ratp-network